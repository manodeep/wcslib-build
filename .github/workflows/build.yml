name: Build

on: [push, pull_request]

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
#   cancel-in-progress: true

jobs:
  build-on-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        wcslib-version: ["8.2.2", "8.3"]
        numpoints: [1000, 10000]
        maxthreads: [5]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unzip
        run: bzcat wcslib-${{ matrix.wcslib-version }}.tar.bz2 | tar pvxf -

      - name: Configure
        if: matrix.wcslib-version == '8.3'
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: ./configure --disable-flex --disable-fortran --without-cfitsio --without-pgplot CFLAGS="-O3 -Wall -Wextra"

      - name: Make wcslib
        if: matrix.wcslib-version == '8.3'
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: make -j4 build

      - name: compile thread race test code
        if: matrix.wcslib-version == '8.3'
        run: make WCSLIB_VERSION=${{ matrix.wcslib-version }}

      - name: run test with bypass mode
        if: matrix.wcslib-version == '8.3'
        run: ./test_wcs_threads-bypass ${{ matrix.numpoints }} ${{ matrix.maxthreads }}

      - name: copy patched files to wcslib directory
        run: |
          chmod 644 wcslib-${{ matrix.wcslib-version }}/C/wcs.c
          cp -p wcs-${{ matrix.wcslib-version }}.c wcslib-${{ matrix.wcslib-version }}/C/wcs.c
          cp -p wcs_pthreads.[ch] wcslib-${{ matrix.wcslib-version }}/C/

      - name: re-run configure to pick up new files
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: ./configure --disable-flex --disable-fortran --without-cfitsio --without-pgplot CFLAGS="-O3 -Wall -Wextra" LDFLAGS="-lpthread"

      - name: Make wcslib
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: make -j4 build

      - name: re-compile thread race test code
        run: make clean && make WCSLIB_VERSION=${{ matrix.wcslib-version }} CFLAGS="-O3 -fopenmp -Wall -Wextra"

      - name: run regular test
        run: ./test_wcs_threads ${{ matrix.numpoints }} ${{ matrix.maxthreads }}


  build-on-windows:
    name: Build on Windows
    runs-on: windows-latest
    needs: build-on-linux
    strategy:
      matrix:
        wcslib-version: ["8.2.2", "8.3"]
        numpoints: [1000, 10000]
        maxthreads: [5]

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: mingw-w64-x86_64-openssl

      - name: Install GCC
        run: pacman --noconfirm -S mingw-w64-x86_64-gcc diffutils make

      - name: Checkout
        uses: actions/checkout@v4

      - name: Unzip
        run: bzcat wcslib-${{ matrix.wcslib-version }}.tar.bz2 | tar pvxf -

      - name: Configure
        if: matrix.wcslib-version == '8.3'
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: ./configure --disable-flex --disable-fortran --without-cfitsio --without-pgplot CFLAGS="-DNO_OLDNAMES -O3 -Wall -Wextra"

      - name: Make wcslib
        if: matrix.wcslib-version == '8.3'
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: make -j4 build

      - name: compile thread race test code
        if: matrix.wcslib-version == '8.3'
        run: make WCSLIB_VERSION=${{ matrix.wcslib-version }} CFLAGS="-DNO_OLDNAMES -O2 -fopenmp"

      - name: run test with bypass mode
        if: matrix.wcslib-version == '8.3'
        run: ./test_wcs_threads-bypass ${{ matrix.numpoints }} ${{ matrix.maxthreads }}

      - name: copy patched files to wcslib directory
        run: |
          chmod 644 wcslib-${{ matrix.wcslib-version }}/C/wcs.c
          cp -p wcs-${{ matrix.wcslib-version }}.c wcslib-${{ matrix.wcslib-version }}/C/wcs.c
          cp -p wcs_pthreads.[ch] wcslib-${{ matrix.wcslib-version }}/C/

      - name: re-run configure to pick up new files
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: ./configure --disable-flex --disable-fortran --without-cfitsio --without-pgplot CFLAGS="-DNO_OLDNAMES -O3 -Wall -Wextra"

      - name: Make wcslib
        working-directory: wcslib-${{ matrix.wcslib-version }}
        run: make -j4 build

      - name: re-compile thread race test code
        run: make clean && make WCSLIB_VERSION=${{ matrix.wcslib-version }} CFLAGS="-DNO_OLDNAMES -O2 -fopenmp"

      - name: run regular test
        run: ./test_wcs_threads ${{ matrix.numpoints }} ${{ matrix.maxthreads }}
